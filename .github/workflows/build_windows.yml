name: Build Windows

on:
  push:
      branches: [main]
  pull_request:
      branches: [main]
  release:
      types: [prereleased]

defaults:
  run:
    shell: msys2 {0}


jobs:
  get_version:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.version }}
    steps:
    - name: checkout source
      uses: actions/checkout@v2

    - id: step1
      run:  |
        cd $GITHUB_WORKSPACE
        version=$(cat "makespec/VERSION").$(cat "makespec/BUILD_VERSION")
      run:  echo "$version"
      run:  echo "::set-output name=version::$version"
      shell: bash


  build:
    runs-on: windows-latest
    needs: get_version

    steps:
    - name: setup msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: base-devel git mingw-w64-x86_64-toolchain mingw64/mingw-w64-x86_64-cmake mingw64/mingw-w64-x86_64-ninja mingw64/mingw-w64-x86_64-python mingw64/mingw-w64-x86_64-qt-creator

    - name: checkout source
      uses: actions/checkout@v2

    - name: fetch submodule
      run: |
        cd $GITHUB_WORKSPACE
        git submodule update --init

    - name: build
      run: |
        cd $GITHUB_WORKSPACE
        mkdir release
        cd release
        cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
        ninja -j $(nproc)
        cpack

    - name: Uploading Windows installer
      uses: actions/upload-artifact@master
      with:
        name: windows-installer
        path: ${{ github.workspace }}/release/*.msi

    - name: Create 7z Release
      uses: DuckSoft/create-7z-action@v1.0
      with:
        pathSource: ./release/CoCOM/
        pathTarget: ./CoCOM-${{needs.get_version.outputs.version}}.7z

    - name: Uploading 7z Release
      uses: actions/upload-artifact@master
      with:
        name: CoCOM-${{needs.get_version.outputs.version}}
        path: CoCOM-${{needs.get_version.outputs.version}}.7z
